#***********************************************************************
#* Meta Pre Processor, a language blender                              *
#* (c) 2013 by Philippe Wang <philippe.wang@cl.cam.ac.uk>              *
#* Licence : CeCILL-B                                                  *
#* http://www.cecill.info/licences/Licence_CeCILL-B_V1-en.html         *
#***********************************************************************

# MPP_LIB = lib/ocamltohtml/ocamltohtml_lexer.ml

MPP_MLs = mpp_charset.ml mpp_charstream.ml mpp_out.ml mpp_stringmap.ml  mpp_actions.ml mpp_init.ml mpp_core.ml $(MPP_LIB) mpp_load.ml mpp_main.ml
MPP_CMOs = $(addsuffix .cmo, $(basename $(MPP_MLs)))
MPP_CMXs = $(addsuffix .cmx, $(basename $(MPP_MLs)))

OCAMLLIBS = str
OCAMLLIBS_CMA = $(addsuffix .cma, $(OCAMLLIBS))
OCAMLLIBS_CMXA = $(addsuffix .cmxa, $(OCAMLLIBS))

OCAMLC = ocamlc $(OCAMLLIBS_CMA)
OCAMLOPT = ocamlopt $(OCAMLLIBS_CMXA)

# Default is the bytecode version because it takes less time to compile.
default:mpp

# lib/ocamltohtml/ocamltohtml_lexer.ml:lib/ocamltohtml/ocamltohtml_lexer.mll
# 	cd lib/ocamltohtml && make $$(basename $@)

mpp:$(MPP_CMOs)
	$(OCAMLC) -g -o $@ $+

mpp.opt:$(MPP_CMXs)
	$(OCAMLOPT) -g -o $@ $+

frag:
	cd lib/fragment && make frag

ocamltohmtl:
	cd lib/ocamltohtml && make ocamltohtml


all:mpp mpp.out mpp-ocaml-toplevel-output

%.cmo:%.ml
	$(OCAMLC) -I lib/ocamltohtml -c $<

%.cmx:%.ml
	$(OCAMLOPT) -I lib/ocamltohtml -c $<

clean:
	rm -f *.cm[oxi] mpp mpp.opt *~

Makefile.depend:$(MPP_MLs)
	ocamldep $+ > $@

install:
	@if [[ "${PREFIX}" == "" ]] ; then echo "# To build MPP and copy it to ${PREFIX}/bin/, please run the following command:\nPREFIX=/path/to/your/install/directory make install\n" ; else make mpp.opt && ( cp mpp.opt "${PREFIX}/bin/" || echo 'Installation failed, please check you have the rights.' ) || echo 'I could not build MPP.' ; fi

installall:install frag
		@if [[ "${PREFIX}" == "" ]] ; then echo "# To build frag and copy it to ${PREFIX}/bin/, please run the following command:\nPREFIX=/path/to/your/install/directory make install\n" ; else make frag.opt && ( cp frag.opt "${PREFIX}/bin/" || echo 'Installation failed, please check you have the rights.' ) || echo 'I could not build MPP.' ; fi

# Makefile.depend is generated by ocamldep
include Makefile.depend

